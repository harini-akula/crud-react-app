{"version":3,"sources":["services/UserService.js","components/UserComponent.jsx","pages/UsersPage.jsx","pages/AddUserPage.jsx","pages/UpdateUserPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","axios","get","newUser","post","id","updatedUser","put","delete","UserComponent","name","email","username","company","website","address","className","street","city","to","console","log","onClick","UserService","deleteUser","then","resp","status","catch","e","UsersPage","useState","users","setUsers","useEffect","getUsers","res","data","map","user","AddUserPage","setUsername","setName","setEmail","setStreet","setCity","setCompany","setWebsite","setUser","setStatus","value","onChange","target","preventDefault","length","postUser","JSON","stringify","response","UpdateUserPage","useParams","suite","zipcode","geo","lat","lng","phone","catchPhrase","bs","fetchUser","useCallback","getUser","prevUser","updateUser","App","activeClassName","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08080ab1.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://jsonplaceholder.typicode.com/users\";\r\n\r\nclass UserService {\r\n  getUsers() {\r\n    return axios.get(BASE_URL);\r\n  }\r\n\r\n  postUser(newUser) {\r\n    return axios.post(BASE_URL, newUser);\r\n  }\r\n\r\n  getUser(id) {\r\n    return axios.get(BASE_URL + \"/\" + id);\r\n  }\r\n\r\n  updateUser(id, updatedUser) {\r\n    return axios.put(BASE_URL + \"/\" + id, updatedUser);\r\n  }\r\n\r\n  deleteUser(id) {\r\n    return axios.delete(BASE_URL + \"/\" + id);\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserService from \"../services/UserService\";\r\n\r\nconst UserComponent = ({\r\n  id,\r\n  name,\r\n  email,\r\n  username,\r\n  company,\r\n  website,\r\n  address,\r\n}) => {\r\n  const handleDelete = () => {\r\n    UserService.deleteUser(id)\r\n      .then((resp) => {\r\n        if (resp.status === 200) {\r\n          console.log(\"user deleted:\" + name);\r\n        }\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"user-container\">\r\n        <div className=\"user-details-container\">\r\n          <h3 className=\"user-title\">{name}</h3>\r\n          <div className=\"user-control\">\r\n            <span className=\"user-info\">Username:</span>\r\n            {username}\r\n          </div>\r\n          <div className=\"user-control\">\r\n            <span className=\"user-info\">Email:</span>\r\n            {email}\r\n          </div>\r\n          <div className=\"user-control\">\r\n            <span className=\"user-info\"> Street Address:</span>\r\n            {address.street}\r\n          </div>\r\n          <div className=\"user-control\">\r\n            <span className=\"user-info\"> City:</span>\r\n            {address.city}\r\n          </div>\r\n          <div className=\"user-control\">\r\n            <span className=\"user-info\">Company:</span>\r\n            {company.name}\r\n          </div>\r\n          <div className=\"user-control\">\r\n            <span className=\"user-info\">Website:</span>\r\n            {website}\r\n          </div>\r\n        </div>\r\n\r\n        <Link to={`/updateUser/${id}`}>\r\n          {console.log(id, \"usercomp\")}\r\n          <div className=\"update-btn-container\">\r\n            <button className=\"update-btn\">Update</button>\r\n          </div>\r\n        </Link>\r\n        <div className=\"delete-btn-container\">\r\n          <button className=\"delete-btn\" onClick={handleDelete}>\r\n            Remove\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserComponent from \"../components/UserComponent\";\r\nimport UserService from \"../services/UserService\";\r\n\r\nconst UsersPage = () => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      UserService.getUsers().then((res) => {\r\n        setUsers(res.data);\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"add-btn-container\">\r\n        <div className=\"page-title\">List Of Users</div>\r\n        <Link to=\"/addUser\">\r\n          <button className=\"add-btn\">Add User</button>\r\n        </Link>\r\n      </div>\r\n      <div className=\"user-list\">\r\n        {users.map((user) => {\r\n          console.log(user.id, \"usersComponent\");\r\n          return <UserComponent key={user.id} {...user} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersPage;\r\n","import React, { useState } from \"react\";\r\nimport UserService from \"../services/UserService\";\r\n\r\nconst AddUserPage = (id) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [street, setStreet] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [company, setCompany] = useState(\"\");\r\n  const [website, setWebsite] = useState(\"\");\r\n\r\n  const [user, setUser] = useState({});\r\n  const [status, setStatus] = useState(\"Add a new user\");\r\n\r\n  const reset = () => {\r\n    setUsername(\"\");\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setStreet(\"\");\r\n    setCity(\"\");\r\n    setCompany(\"\");\r\n    setWebsite(\"\");\r\n  };\r\n\r\n  const addUser = (e) => {\r\n    e.preventDefault();\r\n    if (username.length !== 0 && name.length !== 0 && email.length !== 0) {\r\n      const newUser = {\r\n        username,\r\n        name,\r\n        email,\r\n        street,\r\n        city,\r\n        company: { name: company },\r\n        website,\r\n      };\r\n\r\n      console.log(newUser);\r\n\r\n      setUser(newUser);\r\n\r\n      try {\r\n        UserService.postUser(JSON.stringify(user)).then((response) => {\r\n          console.log(response.data);\r\n          if (response.status === 201) {\r\n            setStatus(\"user added successfully!\");\r\n          } else {\r\n            setStatus(\"user was not added\");\r\n          }\r\n        });\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    } else {\r\n      setStatus(\"Name | Username | Email fields are mandatory\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-user-container\">\r\n      <div className=\"page-title\">Add a new user</div>\r\n      <form className=\"user-form\">\r\n        <div className=\"form-controls\">\r\n          <div className=\"form-item\">\r\n            <label>Name:</label>\r\n            <input\r\n              value={name}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-item\">\r\n            <label>Username:</label>\r\n            <input\r\n              value={username}\r\n              onChange={(e) => {\r\n                setUsername(e.target.value);\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-item\">\r\n            <label>Email:</label>\r\n            <input\r\n              value={email}\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-item\">\r\n            <label>Street Address:</label>\r\n            <input\r\n              value={street}\r\n              onChange={(e) => {\r\n                setStreet(e.target.value);\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-item\">\r\n            <label>City:</label>\r\n            <input\r\n              value={city}\r\n              onChange={(e) => {\r\n                setCity(e.target.value);\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-item\">\r\n            <label>Company:</label>\r\n            <input\r\n              value={company}\r\n              onChange={(e) => {\r\n                setCompany(e.target.value);\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-item\">\r\n            <label>Website:</label>\r\n            <input\r\n              value={website}\r\n              onChange={(e) => {\r\n                setWebsite(e.target.value);\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div className=\"add-user-status\">\r\n            <span>{status}</span>\r\n          </div>\r\n          <div className=\"form-btn\">\r\n            <button className=\"add-btn\" onClick={addUser}>\r\n              Add User\r\n            </button>\r\n          </div>\r\n          <div className=\"form-btn\">\r\n            <button className=\"cancel-btn\" onClick={reset}>\r\n              Clear\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddUserPage;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport UserService from \"../services/UserService\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst UpdateUserPage = () => {\r\n  const { id } = useParams();\r\n  const [user, setUser] = useState({\r\n    id,\r\n    name: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    address: {\r\n      street: \"\",\r\n      suite: \"\",\r\n      city: \"\",\r\n      zipcode: \"\",\r\n      geo: {\r\n        lat: \"\",\r\n        lng: \"\",\r\n      },\r\n    },\r\n    phone: \"\",\r\n    website: \"\",\r\n    company: {\r\n      name: \"\",\r\n      catchPhrase: \"\",\r\n      bs: \"\",\r\n    },\r\n  });\r\n  const [status, setStatus] = useState(\"update user details\");\r\n\r\n  const fetchUser = useCallback(() => {\r\n    if (status === \"update user details\") {\r\n      UserService.getUser(id)\r\n        .then((response) => {\r\n          setUser((prevUser) => ({ ...prevUser, ...response.data }));\r\n        })\r\n        .catch((e) => console.log(e));\r\n    }\r\n  }, [id, status]);\r\n\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, [fetchUser]);\r\n\r\n  const updateUser = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      user.username.length !== 0 &&\r\n      user.name.length !== 0 &&\r\n      user.email.length !== 0\r\n    ) {\r\n      UserService.updateUser(id, JSON.stringify(user))\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          if (response.status === 200) {\r\n            setStatus(\"user updated successfully!\");\r\n          } else {\r\n            setStatus(\"user was not updated\");\r\n          }\r\n        })\r\n        .catch((e) => console.log(e));\r\n    } else {\r\n      setStatus(\"Name | Username | Email fields are mandatory\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-user-container\">\r\n      <div className=\"page-title\">update user details</div>\r\n      <form className=\"user-form\">\r\n        <div className=\"form-controls\">\r\n          <div className=\"form-item\">\r\n            <label>Name:</label>\r\n            <input\r\n              value={user.name}\r\n              onChange={(e) => {\r\n                setUser({ ...user, name: e.target.value });\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-item\">\r\n            <label>Username:</label>\r\n            <input\r\n              value={user.username}\r\n              onChange={(e) => {\r\n                setUser({ ...user, username: e.target.value });\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-item\">\r\n            <label>Email:</label>\r\n            <input\r\n              value={user.email}\r\n              onChange={(e) => {\r\n                setUser({ ...user, email: e.target.value });\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-item\">\r\n            <label>Street Address:</label>\r\n            <input\r\n              value={user.address.street}\r\n              onChange={(e) => {\r\n                setUser({\r\n                  ...user,\r\n                  address: { ...user.address, street: e.target.value },\r\n                });\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-item\">\r\n            <label>City:</label>\r\n            <input\r\n              value={user.address.city}\r\n              onChange={(e) => {\r\n                setUser({\r\n                  ...user,\r\n                  address: { ...user.address, city: e.target.value },\r\n                });\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-item\">\r\n            <label>Company:</label>\r\n            <input\r\n              value={user.company.name}\r\n              onChange={(e) => {\r\n                setUser({\r\n                  ...user,\r\n                  company: { ...user.company, name: e.target.value },\r\n                });\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-item\">\r\n            <label>Website:</label>\r\n            <input\r\n              value={user.website}\r\n              onChange={(e) => {\r\n                setUser({ ...user, website: e.target.value });\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div className=\"add-user-status\">\r\n            <span>{status}</span>\r\n          </div>\r\n          <div className=\"form-btn\">\r\n            <button className=\"add-btn\" onClick={updateUser}>\r\n              Update User\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateUserPage;\r\n","import \"./App.css\";\nimport { HashRouter as Router, Switch, Route, NavLink } from \"react-router-dom\";\nimport UsersPage from \"./pages/UsersPage\";\nimport AddUserPage from \"./pages/AddUserPage\";\nimport UpdateUserPage from \"./pages/UpdateUserPage\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <header>\n          <h2>user management app</h2>\n          <nav>\n            <NavLink\n              to=\"/\"\n              className=\"nav-item\"\n              activeClassName=\"active-nav-item\"\n            >\n              Home\n            </NavLink>{\" \"}\n            |\n            <NavLink\n              to=\"/addUser\"\n              className=\"nav-item\"\n              activeClassName=\"active-nav-item\"\n            >\n              Add User\n            </NavLink>\n          </nav>\n        </header>\n        <section>\n          <Switch>\n            <Route exact path=\"/\" component={UsersPage} />\n            <Route exact path=\"/\" component={UsersPage} />\n            <Route path=\"/usersList\" component={UsersPage} />\n            <Route path=\"/addUser\" component={AddUserPage} />\n            <Route path=\"/updateUser/:id\" component={UpdateUserPage} />\n            <Route path=\"*\" component={UsersPage} />\n          </Switch>\n        </section>\n      </Router>\n\n      <footer>footer</footer>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}